name: Flask Webapp CI/CD Pipeline with KinD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Code
    - name: Checkout code repository
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    
    - name: Build and Push to Docker Hub
      run: |
        docker build -t webapp-flask .
        docker tag webapp-flask:latest devchukwudi/webapp-flask
        docker push devchukwudi/webapp-flask


  test:
    
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Test stage
      run: echo "This is the testing stage"


  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensure deploy runs after the build

    steps:
    # Step 1: Set up KinD cluster
    - name: Set up KinD cluster
      uses: helm/kind-action@v1.2.0
      with:
        version: v0.24.0  # You can specify any stable version of KinD
        config: |
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
            - role: control-plane

    # Step 2: Load Docker image into KinD cluster
    - name: Load Docker image into KinD
      run: kind load docker-image webapp-flask

    # Step 3: Apply Kubernetes manifests
    - name: Deploy to KinD Kubernetes 
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

    # Step 4: Verify that the application is running
    - name: Verify Application Pods
      run: |
        kubectl get pods
        kubectl get services

    # Step 4: Port Forwarding
    - name: Port forward service
      run: |
        kubectl port-forward service/webapp-service 8080:8080 &
    
    # Step 5: Test if the service is accessible
    - name: Test service access
      run: |
        curl http://localhost:8080

